{"version":3,"sources":["components/navigation.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","href","initialState","name","email","message","Contact","useState","setState","handleChange","e","target","value","prevState","validate","onSubmit","preventDefault","console","log","emailjs","sendForm","then","result","alert","error","type","placeholder","required","onChange","rows","data","address","phone","style","color","src","alt","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.55f256c3.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            퐁퐁랩\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features'>\n                Home\n              </a>\n            </li>\n            <li>\n              <a href='#services'>\n                PORTFOLIO\n              </a>\n            </li>\n            <li>\n              <a href='#portfolio'>\n              SERVICE\n              </a>\n            </li>\n            <li>\n              <a href='#contact'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\n\nconst id = \"Y6JVAJY3KFe7zVkyL\"\n\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'service_510v861', 'template_qt5r2of', e.target, id\n      )\n      .then(\n        (result) => {\n          alert('문의 내역이 정상적으로 등록되었습니다.');\n          clearState()\n        },\n        (error) => {\n          alert('문의 내역이 정상적으로 등록되지 않았습니다.');\n        }\n      )\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n        <strong><p>사이트 리뉴얼 중에 있습니다. 빠른 시일내에 업데이트 예정입니다.</p></strong>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Contact</h2>\n                <p>\n                  여러분의 프로젝트를 의뢰해주세요!\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='이름'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='이메일'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='내용'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  문의하기\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Office Number\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n              </p>\n              <a href= {props.data ? \"mailto:\"  + props.data.email : 'loading'}\n              style={{color: \"white\"}}> {props.data ? props.data.email : 'loading'}</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <img \n            src=\"https://s3-alpha-sig.figma.com/img/5a1e/9817/65f4ea63e4dd4fd75f8d61997dea0735?Expires=1658707200&Signature=OXErERTO2VvSFRI1xhDmIhTH5tAbUDuB1AvyeWjgnxHb0wd1WQUt5N1dStmdt8jLHspt~bNQ9K1db4N3aQwGEQ3JMKn4Qa8GTOQ67jufgd~qIW7sTV0kqpH7naMnNhBit3SY2YcnUP9zwRWqB2kGy0uaCK~CfPHVHJyHu96z5u8TmCvguSF7ZYOP0AVQjjW5DX0BUl37614ZHqkxVvtASjbPu6reH0lnV1l~VAmd~uTwRizA6IBvwLGvMcWvtc1-tzR4dVNvdTMyvdVYRGKmwx9eKCIc0pawyYLm4jGjs4xn9BS3sgR3ak3~28AEopV23Jp9bt7bpqLY2ewuBoQmNA__&Key-Pair-Id=APKAINTVSUGEWH5XD5UA\"\n            alt='logo'/>\n          <p>\n            &copy; 2020 pongponglab\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\n\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      {/* <Header data={landingPageData.Header} /> */}\n      {/* <Features data={landingPageData.Features} /> */}\n      {/* <About data={landingPageData.About} /> */}\n      {/* <Services data={landingPageData.Services} /> */}\n      {/* <Gallery /> */}\n      {/* <Team data={landingPageData.Team} /> */}\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}